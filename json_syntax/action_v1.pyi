from typing import Callable, Pattern, SupportsFloat, Union

from datetime import date, datetime, time, timedelta

convert_date: Callable(date.fromisoformat)[[Named(date_string, str)], date] = ...
convert_datetime: Callable(datetime.fromisoformat)[
    [Named(date_string, str)], datetime
] = ...
convert_time: Callable(time.fromisoformat)[[Named(time_string, str)], time] = ...
_iso8601_duration: Pattern[str] = ...

def check_parse_error(value, parser, error) -> bool: ...
def check_isinst(value, typ) -> bool: ...
def convert_float(value: SupportsFloat) -> Union[float, str]: ...
def check_float(value: str) -> bool: ...
def convert_none(value) -> None: ...
def check_str_enum(value, typ) -> bool: ...
def convert_timedelta_str(dur) -> str: ...
def convert_str_timedelta(dur: str) -> timedelta: ...
def check_collection(value, inner, con) -> bool: ...
def check_mapping(value, key, val, con) -> bool: ...
def check_dict(value, inner_map, pre_hook) -> bool: ...
def check_tuple_as_list(value, inner, con) -> bool: ...
def check_union(value, steps) -> bool: ...
